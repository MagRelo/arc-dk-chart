{"version":3,"sources":["routingHack.js","components/random.js","components/header.js","components/LandingPage.js","components/userTable.js","components/WeeklyChart.js","components/lineChart.js","components/PositionList.js","components/scatterChart.js","components/positionScatter.js","components/Player.js","components/CustomList.js","components/404.js","App.js","reportWebVitals.js","index.js"],"names":["OnRouteChangeWorker","prevProps","this","props","location","pathname","action","React","Component","OnRouteChange","SI_SYMBOL","formatNumber","input","parseInt","toFixed","formatCurrency","isShorthand","inputNum","number","tier","Math","log10","suffix","pow","abbreviateNumber","toLocaleString","style","currency","minimumFractionDigits","formatDate","dateOptions","weekday","timeOptions","hour","minute","Date","toLocaleDateString","toLocaleTimeString","date","Bouncing","textAlign","display","className","buildTime","TimeAgo","addLocale","en","timeAgo","d","setUTCSeconds","process","format","PlayerProfile","avatar","displayName","position","team","player","compactUI","TogglePlayerFlag","ProfilePic","avatarUrl","imageUrl","firstName","lastName","opposingTeamCity","opposingTeamName","defaultPic","alt","src","loader","unloader","useContext","CustomListContext","toggleSelected","onList","useState","selected","setSelected","padding","lineHeight","onClick","e","ThisWeek","week","color","salary","salaryZScore","fantasyPointsPerGame","pregameProjection","gameStartTime","DesktopNavList","activeSession","userType","subdomainActive","to","MobileNavList","Header","menuOpen","setMenuOpen","useEffect","globalHistory","listen","href","NavLink","getProps","isCurrent","LandingPage","Styles","styled","div","UserTable","data","columns","useMemo","accessor","Filter","SelectColumnFilter","disableSortBy","row","filter","playerDkId","disableFilters","fantasyPoints","Table","filterTypes","fuzzyText","fuzzyTextFilterFn","text","rows","id","filterValue","rowValue","values","undefined","String","toLowerCase","startsWith","defaultColumn","DefaultColumnFilter","useTable","useFilters","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","firstPageRows","state","visibleColumns","preGlobalFilteredRows","setGlobalFilter","width","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","margin","canFilter","canSort","isSorted","isSortedDesc","i","getRowProps","cells","cell","getCellProps","length","preFilteredRows","setFilter","count","value","onChange","target","placeholder","options","Set","forEach","add","option","matchSorter","keys","WeekForm","loading","setLoading","errorMessage","setErrorMessage","setWeek","setData","a","baseUrl","fetch","response","json","console","log","toString","fetchData","MetaData","item","index","buttonStyle","autoRemove","val","background","title","url","description","image","Helmet","rel","name","content","property","LineChart","points","projected","projectedWin","opponent","targets","domainArray","Array","from","_","theme","VictoryTheme","material","height","domainPadding","x","y","top","bottom","left","right","x1","y1","x2","y2","offset","stopColor","orientation","centerLabel","gutter","labels","fontSize","fontFamily","symbol","fill","domain","tickValues","tickFormat","tick","weekIndex","findIndex","object","label","axis","stroke","strokeWidth","ticks","size","tickLabels","fontWeight","dependentAxis","interpolation","strokeDasharray","datum","labelComponent","dy","barRatio","captions","qb","rb","wr","te","dst","PositionList","playerList","setPlayerList","status","Error","playerData","Fragment","paddingBottom","marginBottom","thisWeek","slicePoints","receptions","caption","array","salaryValue","PositonScatter","setArray","salaryMultiple","setPlayer","playerdkId","CustomList","customList","AboutPage","createContext","splice","removeFromList","push","addToList","App","Provider","path","Player","default","window","scrollTo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2657141b.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Location } from '@reach/router';\n\nexport class OnRouteChangeWorker extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.props.action();\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport const OnRouteChange = ({ action }) => (\n  <Location>\n    {({ location }) => (\n      <OnRouteChangeWorker location={location} action={action} />\n    )}\n  </Location>\n);\n\nexport const ScrollToTop = ({ children, location }) => {\n  React.useLayoutEffect(() => window.scrollTo(0, 0), [location.pathname]);\n  return children;\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Img } from 'react-image';\n// import { Link } from '@reach/router';\n\nimport { CustomListContext } from 'App';\n\n// resources\n// import { FaRocketchat, FaRegKeyboard } from 'react-icons/fa';\n// import { GoFileSubmodule } from 'react-icons/go';\n// import { IoIosMail } from 'react-icons/io';\n// import { ImNewspaper } from 'react-icons/im';\n// import { MdOndemandVideo } from 'react-icons/md';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\n\nvar SI_SYMBOL = ['', 'k', 'M', 'G', 'T', 'P', 'E'];\n\nfunction abbreviateNumber(number) {\n  // what tier? (determines SI symbol)\n  var tier = (Math.log10(number) / 3) | 0;\n\n  // if zero, we don't need a suffix\n  if (tier === 0) return number;\n\n  // get suffix and determine scale\n  var suffix = SI_SYMBOL[tier];\n  var scale = Math.pow(10, tier * 3);\n\n  // scale the number\n  var scaled = number / scale;\n\n  // format number and add suffix\n  return scaled + suffix;\n}\n\nexport function formatNumber(input) {\n  if (typeof input == 'undefined' || input == null) {\n    return '';\n  }\n\n  // type checks\n  let inputNum = 0;\n  if (typeof input === 'string') {\n    inputNum = parseInt(input, 10);\n  } else {\n    inputNum = input;\n  }\n\n  return inputNum.toFixed(2);\n}\n\nexport function formatCurrency(input, isShorthand) {\n  if (typeof input == 'undefined') {\n    return '';\n  }\n  // type checks\n  let inputNum = 0;\n  if (typeof input === 'string') {\n    inputNum = parseInt(input, 10);\n  } else {\n    inputNum = input;\n  }\n\n  // output style\n  if (isShorthand) {\n    return '$' + abbreviateNumber(inputNum);\n  } else {\n    return inputNum.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n    });\n  }\n}\n\nexport function formatDate(input) {\n  const dateOptions = { weekday: 'short' };\n  const timeOptions = { hour: 'numeric', minute: 'numeric' };\n\n  if (input instanceof Date) {\n    return (\n      input.toLocaleDateString('en-US', dateOptions) +\n      ' ' +\n      input.toLocaleTimeString('en-US', timeOptions)\n    );\n  } else {\n    const date = new Date(input);\n    return (\n      date.toLocaleDateString('en-US', dateOptions) +\n      ' ' +\n      date.toLocaleTimeString('en-US', timeOptions)\n    );\n  }\n}\n\n// Our hook\nexport function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Return a cleanup function that will be called every time ...\n      // ... useEffect is re-called. useEffect will only be re-called ...\n      // ... if value changes (see the inputs array below).\n      // This is how we prevent debouncedValue from changing if value is ...\n      // ... changed within the delay period. Timeout gets cleared and restarted.\n      // To put it in context, if the user is typing within our app's ...\n      // ... search box, we don't want the debouncedValue to update until ...\n      // ... they've stopped typing for more than 500ms.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [value, delay]\n  );\n\n  return debouncedValue;\n}\n\nexport function usePromise(promiseOrFunction, defaultValue) {\n  const [state, setState] = React.useState({\n    value: defaultValue,\n    error: null,\n    isPending: true,\n  });\n\n  React.useEffect(() => {\n    const promise =\n      typeof promiseOrFunction === 'function'\n        ? promiseOrFunction()\n        : promiseOrFunction;\n\n    let isSubscribed = true;\n    promise\n      .then((value) =>\n        isSubscribed ? setState({ value, error: null, isPending: false }) : null\n      )\n      .catch((error) =>\n        isSubscribed\n          ? setState({ value: defaultValue, error: error, isPending: false })\n          : null\n      );\n\n    return () => (isSubscribed = false);\n  }, [promiseOrFunction, defaultValue]);\n\n  const { value, error, isPending } = state;\n  return [value, error, isPending];\n}\n\nexport function Loading() {\n  return (\n    <div\n      style={{\n        textAlign: 'center',\n        marginTop: '1em',\n      }}\n    >\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n}\n\nexport function Bouncing() {\n  return (\n    <div style={{ textAlign: 'center', display: 'inline-block' }}>\n      <div className=\"spinner\">\n        <div className=\"bounce1\"></div>\n        <div className=\"bounce2\"></div>\n        <div className=\"bounce3\"></div>\n      </div>\n    </div>\n  );\n}\n\nfunction fallbackCopyTextToClipboard(text) {\n  var textArea = document.createElement('textarea');\n  textArea.value = text;\n  textArea.style.position = 'fixed'; //avoid scrolling to bottom\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    var successful = document.execCommand('copy');\n    var msg = successful ? 'successful' : 'unsuccessful';\n    console.log('Fallback: Copying text command was ' + msg);\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n}\nexport function copyTextToClipboard(text) {\n  if (!navigator.clipboard) {\n    fallbackCopyTextToClipboard(text);\n    return;\n  }\n  navigator.clipboard.writeText(text).then(\n    function () {\n      console.log('Async: Copying to clipboard was successful!');\n    },\n    function (err) {\n      console.error('Async: Could not copy text: ', err);\n    }\n  );\n}\n\nexport function getParams(location) {\n  if (!location.search) {\n    return '';\n  }\n\n  return getJsonFromUrl(location.search);\n}\n\nfunction getJsonFromUrl(search) {\n  var query = search.substr(1);\n  var result = {};\n  query.split('&').forEach(function (part) {\n    var item = part.split('=');\n    result[item[0]] = decodeURIComponent(item[1]);\n  });\n  return result;\n}\n\nexport function buildTime() {\n  // relative time\n\n  TimeAgo.addLocale(en);\n  const timeAgo = new TimeAgo('en-US');\n  var d = new Date(0); // The 0 there is the key, which sets the date to the epoch\n  d.setUTCSeconds(process.env.REACT_APP_BUILD_TIME);\n  return timeAgo.format(d);\n}\n\nexport function PlayerProfile({\n  avatar,\n  displayName,\n  position,\n  team,\n  player,\n  compactUI = false,\n}) {\n  // console.log(player.avatar, player.lastName);\n\n  return (\n    <div className={compactUI ? 'user-info compact' : 'user-info'}>\n      <div>\n        {compactUI ? null : <TogglePlayerFlag player={player} />}\n        <ProfilePic avatarUrl={avatar || player.imageUrl} />\n      </div>\n\n      <div className=\"user-text\">\n        <div className=\"user-name\">\n          {displayName || player.firstName + ' ' + player.lastName}\n        </div>\n        <div className=\"user-caption\">\n          <span className=\"position\">\n            <b>{position || player.position}</b>\n          </span>{' '}\n          |{' '}\n          <span className=\"team\">\n            {team || player.opposingTeamCity + ' ' + player.opposingTeamName}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ProfilePic({ avatarUrl }) {\n  const defaultPic = () => {\n    return (\n      <div className=\"user-avatar\">\n        <div className=\"user-avatar-pic\" alt=\"avatar\">\n          N/A\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Img\n      className=\"user-avatar\"\n      src={[avatarUrl]}\n      loader={defaultPic()}\n      unloader={defaultPic()}\n    />\n  );\n}\n\nexport function TogglePlayerFlag({ player }) {\n  const { toggleSelected, onList } = useContext(CustomListContext);\n  const [selected, setSelected] = useState(onList(player));\n\n  function toggleSelect() {\n    toggleSelected(player);\n    setSelected(!selected);\n  }\n\n  return (\n    <button\n      className=\"btn btn-unstyled\"\n      style={{ position: 'absolute', padding: 0, lineHeight: '15px' }}\n      onClick={(e) => toggleSelect()}\n    >\n      {selected ? <span>🚩</span> : <span>🏳</span>}\n    </button>\n  );\n}\n// export const NavLink = (props) => (\n//   <Link\n//     {...props}\n//     getProps={({ isCurrent }) => {\n//       return {\n//         className: isCurrent ? 'nav-link active' : 'nav-link',\n//       };\n//     }}\n//   />\n// );\n\n// export function SubscriptionLink() {\n//   const [stripeLink, setStripeLink] = React.useState('');\n//   const [loading, setLoading] = React.useState(false);\n//   const { callApi, user } = React.useContext(AuthContext);\n\n//   const hasSubscriptions = !!user?.subscriptions.length || false;\n\n//   useEffect(() => {\n//     if (hasSubscriptions) {\n//       setLoading(true);\n//       callApi('POST', '/api/user/subscription', {})\n//         .then((response) => {\n//           setStripeLink(response.url);\n//           setLoading(false);\n//         })\n//         .catch((error) => {\n//           console.log(error);\n//           setLoading(false);\n//         });\n//     }\n//   }, [callApi, hasSubscriptions]);\n\n//   return (\n//     <a\n//       href={stripeLink}\n//       disabled={loading && !hasSubscriptions}\n//       className=\"btn btn-theme\"\n//     >\n//       {loading ? <Bouncing /> : <span>Manage Subscriptions</span>}\n//     </a>\n//   );\n// }\n\n// export function ToolGrid() {\n//   return (\n//     <div className=\"grid tool-grid\">\n//       <div className=\"tool-grid-item\">\n//         <div className=\"icon-large\">\n//           <FaRocketchat />\n//         </div>\n//         Live Chat\n//       </div>\n\n//       <div className=\"tool-grid-item\">\n//         <div className=\"icon-large\">\n//           <MdOndemandVideo />\n//         </div>\n//         Video Conferencing\n//       </div>\n\n//       <div className=\"tool-grid-item\">\n//         <div className=\"icon-large\">\n//           <GoFileSubmodule />\n//         </div>\n//         File Sharing\n//       </div>\n//     </div>\n//   );\n// }\n\n// export function SiteGrid() {\n//   return (\n//     <div className=\"grid tool-grid\">\n//       <div className=\"tool-grid-item\">\n//         <div className=\"icon-large\">\n//           <ImNewspaper />\n//         </div>\n//         Website\n//       </div>\n\n//       <div className=\"tool-grid-item\">\n//         <div className=\"icon-large\">\n//           <FaRegKeyboard />\n//         </div>\n//         Blog\n//       </div>\n\n//       <div className=\"tool-grid-item\">\n//         <div className=\"icon-large\">\n//           <IoIosMail />\n//         </div>\n//         Newsletter\n//       </div>\n//     </div>\n//   );\n// }\n\nexport function FormStatusButtons({\n  saveFunction,\n  saveLabel = 'Save',\n  resetFunction,\n  isDirty,\n  isLoading,\n  errorMessage,\n  successMessage,\n}) {\n  let showCancel = false;\n  if (typeof resetFunction === 'function') {\n    // console.log('function:', typeof resetFunction);\n    showCancel = true;\n  }\n\n  return (\n    <React.Fragment>\n      {/* Save */}\n      <button\n        className=\"btn btn-theme\"\n        disabled={!isDirty || isLoading || errorMessage}\n        onClick={saveFunction}\n      >\n        <span>{saveLabel}</span>\n      </button>\n\n      {/* Cancel */}\n      {showCancel ? (\n        <button\n          className=\"btn btn-sm\"\n          onClick={resetFunction}\n          disabled={!isDirty || isLoading || errorMessage}\n        >\n          <span>Cancel</span>\n        </button>\n      ) : null}\n\n      {/* loading */}\n      {isLoading ? <Bouncing /> : null}\n\n      <span style={{ marginLeft: '1rem' }}>\n        {/* Success */}\n        {successMessage ? <span>{successMessage}</span> : null}\n\n        {/* Error */}\n        {errorMessage ? (\n          <span>\n            <code>{errorMessage}</code>\n            <button\n              className=\"btn btn-sm\"\n              style={{ marginLeft: '1rem' }}\n              onClick={resetFunction}\n            >\n              <span>Reset</span>\n            </button>\n          </span>\n        ) : null}\n      </span>\n      {/* \n      <hr />\n      {JSON.stringify({\n        saveFunction,\n        resetFunction,\n        isDirty,\n        isLoading,\n        errorMessage,\n        successMessage,\n      })} */}\n    </React.Fragment>\n  );\n}\n\n// function withLogger(dispatch) {\n//   return function(action) {\n//     console.groupCollapsed('Action Type:', action.type);\n//     return dispatch(action);\n//   };\n// }\n\n// function useReducerWithLogger(...args) {\n//   let prevState = useRef(initialState);\n//   const [state, dispatch] = useReducer(...args);\n\n//   const dispatchWithLogger = useMemo(() => {\n//     return withLogger(dispatch);\n//   }, [dispatch]);\n\n//   useEffect(() => {\n//     if (state !== initialState) {\n//       console.log('Prev state: ', prevState.current);\n//       console.log('Next state: ', state);\n//       console.groupEnd();\n//     }\n//     prevState.current = state;\n//   }, [state]);\n\n//   return [state, dispatchWithLogger];\n// }\n\nexport function ThisWeek({ week }) {\n  return (\n    week && (\n      <div className=\"grid-left\">\n        <div className=\"grid-label\">Salary</div>\n        <div className=\"grid-value\">\n          <div>\n            <span style={{ color: '#61b510' }}>\n              {formatCurrency(week.salary)}\n            </span>{' '}\n            <span style={{ color: '#aaa' }}>\n              {formatNumber(week.salaryZScore)}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"grid-label\">FPPG</div>\n        <div className=\"grid-value\">\n          {' '}\n          {formatNumber(week.fantasyPointsPerGame)}\n        </div>\n\n        <div className=\"grid-label\">Projected</div>\n        <div className=\"grid-value\">\n          {' '}\n          {formatNumber(week.pregameProjection)}\n        </div>\n\n        <div className=\"grid-label\">Opponent</div>\n        <div className=\"grid-value\">\n          {' '}\n          {week.opposingTeamCity + ' ' + week.opposingTeamName}\n        </div>\n\n        <div className=\"grid-label\">Gametime</div>\n        <div className=\"grid-value\">{formatDate(week.gameStartTime)}</div>\n      </div>\n    )\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link, globalHistory, useLocation } from '@reach/router';\nimport { createConnection } from 'mongoose';\n\nfunction Header() {\n  // const { activeSession, user } = useContext(AuthContext);\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  useEffect(() => {\n    return globalHistory.listen((action) => {\n      setMenuOpen(false);\n    });\n  }, []);\n\n  return (\n    <header>\n      <div className=\"header-grid\">\n        {/* Title & Mobile Menu Button */}\n        <div>\n          <button\n            className=\"btn button-unstyled menu-button\"\n            onClick={() => {\n              setMenuOpen(!menuOpen);\n            }}\n          >\n            Menu\n          </button>\n\n          <span className=\"header-title\">\n            <a href=\"/\">DK Charts</a>\n          </span>\n        </div>\n\n        {/* Desktop Layout */}\n        <div className=\"desktop-menu\">\n          <DesktopNavList />\n        </div>\n\n        {/* Mobile Layout */}\n        <div className=\"mobile-menu\">{menuOpen ? <MobileNavList /> : null}</div>\n      </div>\n    </header>\n  );\n}\n\nfunction DesktopNavList({ activeSession, userType, subdomainActive }) {\n  // console.log((activeSession, userType));\n  return (\n    <nav className=\"desktop-grid\">\n      <ul className=\"nav-list\">\n        <li>\n          <NavLink to=\"/charts\">Weekly Charts</NavLink>\n        </li>\n\n        <li>\n          <NavLink to=\"/position/qb\">QB</NavLink>\n        </li>\n\n        <li>\n          <NavLink to=\"/position/rb\">RB</NavLink>\n        </li>\n\n        <li>\n          <NavLink to=\"/position/wr\">WR</NavLink>\n        </li>\n\n        <li>\n          <NavLink to=\"/position/te\">TE</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/position/dst\">DST</NavLink>\n        </li>\n      </ul>\n\n      {/* Right Aligned */}\n      <div>\n        <ul className=\"nav-list\">\n          <li>\n            <NavLink to=\"/custom\">Custom List</NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nfunction MobileNavList({ activeSession, userType, subdomainActive }) {\n  // console.log((activeSession, userType));\n  return (\n    <nav>\n      <ul className=\"nav-list\">\n        <li>\n          <NavLink to=\"/charts\">Weekly Charts</NavLink>\n        </li>\n      </ul>\n\n      <ul className=\"nav-list\">\n        <li>\n          <NavLink to=\"/position/qb\">QB</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/position/rb\">RB</NavLink>\n        </li>\n\n        <li>\n          <NavLink to=\"/position/wr\">WR</NavLink>\n        </li>\n\n        <li>\n          <NavLink to=\"/position/te\">TE</NavLink>\n        </li>\n\n        <li>\n          <NavLink to=\"/position/dst\">DST</NavLink>\n        </li>\n      </ul>\n\n      <span>\n        <NavLink to=\"/custom\">Custom List</NavLink>\n      </span>\n    </nav>\n  );\n}\n\nexport default Header;\n\nconst NavLink = (props) => (\n  <Link\n    {...props}\n    getProps={({ isCurrent }) => {\n      return {\n        className: isCurrent ? 'nav-link active' : 'nav-link',\n      };\n    }}\n  />\n);\n","import React from 'react';\nimport { Link } from '@reach/router';\n\nfunction LandingPage(props) {\n  return (\n    <div>\n      <div className=\"container\" style={{ textAlign: 'center' }}>\n        <h1>DK Charts</h1>\n        <h2>View By Position</h2>\n\n        <div className=\"grid-5\">\n          <div>\n            <Link className=\"btn btn-theme\" to=\"/position/qb\">\n              Quarterbacks\n            </Link>\n          </div>\n          <div>\n            <Link className=\"btn btn-theme\" to=\"/position/rb\">\n              Running Backs\n            </Link>\n          </div>\n          <div>\n            <Link className=\"btn btn-theme\" to=\"/position/wr\">\n              Wide Receivers\n            </Link>\n          </div>\n          <div>\n            <Link className=\"btn btn-theme\" to=\"/position/te\">\n              Tight Ends\n            </Link>\n          </div>\n          <div>\n            <Link className=\"btn btn-theme\" to=\"/position/dst\">\n              Defenses\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport styled from 'styled-components';\n\nimport { formatNumber, TogglePlayerFlag } from 'components/random';\n\nimport {\n  useTable,\n  useFilters,\n  useGlobalFilter,\n  useAsyncDebounce,\n  useSortBy,\n} from 'react-table';\n// A great library for fuzzy filtering/sorting items\nimport { matchSorter } from 'match-sorter';\n\n// import makeData from './makeData';\n\nconst Styles = styled.div`\n  padding: 0 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid #1e1e1e;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid #1e1e1e;\n      border-right: 1px solid #1e1e1e;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nfunction UserTable({ data = [], week }) {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'DK Data',\n        columns: [\n          {\n            Header: 'Position',\n            accessor: 'position',\n            // accessor: (row) => '🔒 (Subscribe)',\n            Filter: SelectColumnFilter,\n            disableSortBy: true,\n          },\n          {\n            Header: 'Name',\n            accessor: (row) => row.firstName + ' ' + row.lastName,\n            // accessor: (row) => '🔒 (Subscribe)',\n            // Use our custom `fuzzyText` filter on this column\n            filter: 'fuzzyText',\n            disableSortBy: true,\n          },\n          {\n            Header: '...',\n            accessor: (row) => <Link to={'/player/' + row.playerDkId}>📈</Link>,\n            disableFilters: true,\n            disableSortBy: true,\n          },\n          {\n            Header: 'Team',\n            accessor: 'teamName',\n            // accessor: (row) => '🔒 (Subscribe)',\n            Filter: SelectColumnFilter,\n            disableSortBy: true,\n          },\n          {\n            Header: 'Opponent',\n            accessor: 'opposingTeamName',\n            // accessor: (row) => '🔒 (Subscribe)',\n            Filter: SelectColumnFilter,\n            disableSortBy: true,\n          },\n\n          {\n            Header: 'Salary',\n            accessor: 'salary',\n            // accessor: (row) => formatCurrency(row.salary, true),\n            // Filter: NumberRangeColumnFilter,\n            disableFilters: true,\n          },\n\n          {\n            Header: 'Proj. Points',\n            accessor: (row) => formatNumber(row.pregameProjection),\n            disableFilters: true,\n          },\n          {\n            Header: 'FPPG',\n            accessor: 'fantasyPointsPerGame',\n            disableFilters: true,\n          },\n\n          {\n            Header: 'Salary/FPPG',\n            accessor: (row) =>\n              formatNumber((row.fantasyPointsPerGame * 1000) / row.salary),\n            disableFilters: true,\n          },\n          {\n            Header: 'Points',\n            accessor: 'fantasyPoints',\n            disableFilters: true,\n          },\n          {\n            Header: 'Salary/Points',\n            accessor: (row) =>\n              formatNumber((row.fantasyPoints * 1000) / row.salary),\n            disableFilters: true,\n          },\n        ],\n      },\n    ],\n    []\n  );\n\n  // const data = React.useMemo(() => makeData(100000), []);\n\n  return (\n    <Styles>\n      <Table columns={columns} data={data} />\n    </Styles>\n  );\n}\nexport default UserTable;\n\n// Our table component\nfunction Table({ columns, data }) {\n  const filterTypes = React.useMemo(\n    () => ({\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id];\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true;\n        });\n      },\n    }),\n    []\n  );\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n      // Filter: undefined,\n    }),\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    visibleColumns,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn, // Be sure to pass the defaultColumn option\n      filterTypes,\n    },\n    useFilters, // useFilters!\n    useGlobalFilter, // useGlobalFilter!\n    useSortBy\n  );\n\n  // We don't want to render all of the rows for this example, so cap\n  // it for this use case\n  // const firstPageRows = rows.slice(0, 200);\n  const firstPageRows = rows;\n\n  return (\n    <>\n      <table {...getTableProps()} style={{ width: '100%' }}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n\n                  {/* Render the columns filter UI */}\n                  <div style={{ margin: '4px 0 1px' }}>\n                    {column.canFilter ? column.render('Filter') : null}\n\n                    {column.canSort ? (\n                      <span>\n                        {column.isSorted\n                          ? column.isSortedDesc\n                            ? ' 🔽 '\n                            : ' 🔼 '\n                          : ' 🔄 '}\n                      </span>\n                    ) : null}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          ))}\n          {/*           \n          <tr>\n            <th\n              colSpan={visibleColumns.length}\n              style={{\n                textAlign: 'left',\n              }}\n            >\n              <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n              />\n            </th>\n          </tr> */}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {firstPageRows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <br />\n      <div>\n        Showing the {firstPageRows.length} results of {rows.length} rows\n      </div>\n      <div>\n        {/* <pre>\n          <code>{JSON.stringify(state.filters, null, 2)}</code>\n        </pre> */}\n      </div>\n    </>\n  );\n}\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return (\n    <span>\n      Search:{' '}\n      <input\n        value={value || ''}\n        onChange={(e) => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        }}\n        placeholder={`${count} records...`}\n        style={{\n          fontSize: '1.1rem',\n          border: '0',\n        }}\n      />\n    </span>\n  );\n}\n\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <input\n      value={filterValue || ''}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${count} records...`}\n    />\n  );\n}\n\n// This is a custom filter UI for selecting\n// a unique option from a list\nfunction SelectColumnFilter({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) {\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  const options = React.useMemo(() => {\n    const options = new Set();\n    preFilteredRows.forEach((row) => {\n      options.add(row.values[id]);\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]);\n\n  // Render a multi-select box\n  return (\n    <select\n      className=\"select-css\"\n      value={filterValue}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n    >\n      <option value=\"\">All</option>\n      {options.map((option, i) => (\n        <option key={i} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  );\n}\n\n// This is a custom filter UI that uses a\n// slider to set the filter value between a column's\n// min and max values\nfunction SliderColumnFilter({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) {\n  // Calculate the min and max\n  // using the preFilteredRows\n\n  const [min, max] = React.useMemo(() => {\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    preFilteredRows.forEach((row) => {\n      min = Math.min(row.values[id], min);\n      max = Math.max(row.values[id], max);\n    });\n    return [min, max];\n  }, [id, preFilteredRows]);\n\n  return (\n    <>\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={filterValue || min}\n        onChange={(e) => {\n          setFilter(parseInt(e.target.value, 10));\n        }}\n      />\n      <button onClick={() => setFilter(undefined)}>Off</button>\n    </>\n  );\n}\n\n// This is a custom UI for our 'between' or number range\n// filter. It uses two number boxes and filters rows to\n// ones that have values between the two\nfunction NumberRangeColumnFilter({\n  column: { filterValue = [], preFilteredRows, setFilter, id },\n}) {\n  const [min, max] = React.useMemo(() => {\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    preFilteredRows.forEach((row) => {\n      min = Math.min(row.values[id], min);\n      max = Math.max(row.values[id], max);\n    });\n    return [min, max];\n  }, [id, preFilteredRows]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n      }}\n    >\n      <input\n        value={filterValue[0] || ''}\n        type=\"number\"\n        onChange={(e) => {\n          const val = e.target.value;\n          setFilter((old = []) => [\n            val ? parseInt(val, 10) : undefined,\n            old[1],\n          ]);\n        }}\n        placeholder={`Min (${min})`}\n        style={{\n          width: '70px',\n          marginRight: '0.5rem',\n        }}\n      />\n      to\n      <input\n        value={filterValue[1] || ''}\n        type=\"number\"\n        onChange={(e) => {\n          const val = e.target.value;\n          setFilter((old = []) => [\n            old[0],\n            val ? parseInt(val, 10) : undefined,\n          ]);\n        }}\n        placeholder={`Max (${max})`}\n        style={{\n          width: '70px',\n          marginLeft: '0.5rem',\n        }}\n      />\n    </div>\n  );\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val;\n\n// Define a custom filter filter function!\nfunction filterGreaterThan(rows, id, filterValue) {\n  return rows.filter((row) => {\n    const rowValue = row.values[id];\n    return rowValue >= filterValue;\n  });\n}\n\n// This is an autoRemove method on the filter function that\n// when given the new filter value and returns true, the filter\n// will be automatically removed. Normally this is just an undefined\n// check, but here, we want to remove the filter if it's not a number\nfilterGreaterThan.autoRemove = (val) => typeof val !== 'number';\n","import React, { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\n\nimport UserTable from 'components/userTable';\nimport { Bouncing } from 'components/random';\n\nexport function WeekForm() {\n  // const { callApi, user, updateUser } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  // const [successMessage, setSuccessMessage] = useState(null);\n\n  const weekArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\n  const [week, setWeek] = useState(parseInt(process.env.REACT_APP_WEEK));\n  const [data, setData] = useState([]);\n\n  // get latest week\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      const baseUrl = '/api/week/' + week;\n      try {\n        const response = await fetch(baseUrl);\n        const data = await response.json();\n        setData(data);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(error.toString());\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [week]);\n\n  return (\n    <div style={{ textAlign: 'center' }} className=\"container\">\n      {MetaData()}\n      <h1>{'Week ' + week}</h1>\n      <div style={{ margin: '0.8rem 0' }}>\n        {weekArray.map((item, index) => {\n          return (\n            <button\n              className=\"btn btn-theme\"\n              style={buttonStyle(index + 1, week)}\n              key={index}\n              onClick={(e) => {\n                setWeek(index + 1);\n              }}\n            >\n              {index + 1}\n            </button>\n          );\n        })}\n      </div>\n\n      <div style={{ textAlign: 'center' }}>\n        {loading ? <Bouncing /> : null}\n        {errorMessage ? <p>{errorMessage}</p> : null}\n      </div>\n      {!loading ? <UserTable data={data} /> : null}\n    </div>\n  );\n}\n\nexport default WeekForm;\n\nfunction buttonStyle(index, week) {\n  // console.log(index, week);\n\n  if (index === week) {\n    return {\n      background: '#61b510',\n    };\n  }\n  return null;\n}\n\nfunction MetaData(player) {\n  const title = 'Weekly Charts | DK Charts';\n  const url = 'https://dk.mattlovan.com/';\n  const description = 'Weekly Charts | DK Charts';\n  const image = 'https://dk.mattlovan.com/logo_share.png';\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <link rel=\"canonical\" href={url} />\n      <meta name=\"description\" content={description} />\n\n      <meta property=\"og:site_name\" content={title} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:image:secure_url\" content={url} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:image:type\" content=\"png\" />\n      <meta property=\"og:image:height\" content=\"201\" />\n      <meta property=\"og:image:width\" content=\"630\" />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"Dk Charts\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n}\n","import React from 'react';\n\nimport {\n  VictoryTheme,\n  VictoryChart,\n  VictoryLine,\n  VictoryBar,\n  VictoryLabel,\n  VictoryScatter,\n  VictoryAxis,\n  VictoryLegend,\n} from 'victory';\n\nfunction LineChart({\n  week = parseInt(process.env.REACT_APP_WEEK),\n  points = [],\n  projected = [],\n  projectedWin = [],\n  opponent = [],\n  targets = [],\n}) {\n  const domainArray = Array.from({ length: week + 1 }, (_, i) => i + 1);\n\n  return (\n    <VictoryChart\n      theme={VictoryTheme.material}\n      height={150}\n      domainPadding={{ x: 0, y: 10 }}\n      padding={{ top: 18, bottom: 18, left: 35, right: 35 }}\n    >\n      <svg>\n        <defs>\n          <linearGradient id=\"myGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor=\"green\" />\n            <stop offset=\"100%\" stopColor=\"red\" />\n          </linearGradient>\n        </defs>\n      </svg>\n      {/* stroke: 'url(#myGradient)', */}\n\n      <VictoryLegend\n        orientation=\"horizontal\"\n        centerLabel\n        x={35}\n        gutter={15}\n        style={{\n          // border: { stroke: 'black' },\n          labels: { fontSize: 6, fontFamily: 'Montserrat' },\n        }}\n        data={[\n          { name: '2.5X (125 pts)', symbol: { fill: '#aaaaaa80' } },\n          { name: '3.5X (175 pts)', symbol: { fill: '#6DCE1280' } },\n          { name: 'Points Scored', symbol: { fill: '#00A7F5' } },\n          { name: 'Targets', symbol: { fill: '#00A7F540' } },\n        ]}\n      />\n\n      <VictoryAxis\n        domain={[1, week + 1]}\n        tickValues={domainArray}\n        tickFormat={(tick) => {\n          const weekIndex = opponent.findIndex((object) => object.x === tick);\n          if (weekIndex > -1) {\n            return opponent[weekIndex].label;\n          }\n\n          return '';\n        }}\n        style={{\n          axis: { stroke: '#aaa', strokeWidth: 1 },\n          ticks: { stroke: '#ddd', size: 3 },\n          tickLabels: {\n            fontSize: 6,\n            fontFamily: 'Montserrat',\n            fontWeight: 'bold',\n            padding: 4,\n            fill: '#888',\n          },\n        }}\n      />\n\n      <VictoryAxis\n        dependentAxis\n        tickFormat={(x) => `${x / 1000} pts`}\n        theme={VictoryTheme.material}\n        style={{\n          axis: { stroke: '#aaa', strokeWidth: 1 },\n          tickLabels: {\n            fontSize: 6,\n            fontFamily: 'Montserrat',\n            padding: 4,\n            fill: '#888',\n          },\n        }}\n      />\n\n      {/* Lines */}\n      <VictoryLine\n        data={projected}\n        interpolation=\"natural\"\n        style={{\n          data: {\n            stroke: '#aaaaaa80',\n            strokeDasharray: '3',\n            strokeWidth: 2,\n          },\n        }}\n      />\n      <VictoryLine\n        data={projectedWin}\n        interpolation=\"natural\"\n        style={{\n          data: {\n            stroke: '#6DCE1280',\n            strokeDasharray: '4',\n            strokeWidth: 2,\n          },\n        }}\n      />\n\n      {/* Targets */}\n      <VictoryBar\n        data={targets}\n        labels={({ datum }) => datum.y / 1000}\n        labelComponent={<VictoryLabel dy={-2} />}\n        barRatio={0.4}\n        style={{\n          data: {\n            fill: '#00A7F540',\n            stroke: '#00A7F540',\n            strokeWidth: 0,\n          },\n          labels: {\n            fontSize: 5,\n            fontFamily: 'Montserrat',\n            fill: '#00A7F5',\n          },\n        }}\n      />\n\n      {/* Points */}\n      <VictoryScatter\n        symbol=\"circle\"\n        size={2}\n        style={{ data: { fill: '#00A7F5' } }}\n        data={points}\n      />\n      <VictoryLine\n        data={points}\n        labels={({ datum }) => datum.y / 1000}\n        style={{\n          data: {\n            stroke: '#00A7F5',\n            strokeWidth: 1,\n          },\n          labels: {\n            fontSize: 5,\n            fontFamily: 'Montserrat',\n            fill: '#007DB8',\n          },\n        }}\n      />\n    </VictoryChart>\n  );\n}\n\nexport default LineChart;\n\n// function buildLineData(average, start, end) {\n//   // console.log(average, stdDev, length);\n//   // const max = average + stdDev;\n//   // const min = average - stdDev;\n\n//   const domain = [];\n//   for (let x = start; x < end; x++) {\n//     domain.push({\n//       x: x,\n//       y: average,\n//     });\n//   }\n\n//   // console.log(domain);\n//   return domain;\n// }\n\n// function buildAreaData(average, stdDev, length) {\n//   // console.log(average, stdDev, length);\n\n//   const max = average + stdDev;\n//   const min = average - stdDev;\n\n//   const data = Array.from({ length: length }, (item, index) => {\n//     return {\n//       x: index,\n//       y0: min,\n//       y: max,\n//     };\n//   });\n\n//   // console.log(data);\n//   return data;\n// }\n\n// const FPPGLine = buildLineData(FPPG, 16);\n// const FPPGLine = buildLineData(FPPG * 1000, 1, 11);\n\n// const globalLine = buildLineData(stats.global_avg, data.length);\n// const globalArea = buildAreaData(\n//   stats.global_avg,\n//   stats.global_StdDev,\n//   data.length\n// // );\n\n// const globalLine = buildLineData(1200, contentData.length);\n// const globalArea = buildAreaData(1200, 425, contentData.length);\n\n// const globalLine = buildLineData(positionAvg, 0, 18);\n// const globalArea = buildAreaData(positionAvg, positionStdDev, 18);\n\n// console.log({ globalLine, globalArea });\n","import React, { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\n\nimport LineChart from 'components/lineChart';\nimport { PlayerProfile, Bouncing, ThisWeek } from 'components/random';\n\nconst captions = {\n  qb: {\n    title: 'Quarterbacks',\n    description: '',\n  },\n  rb: {\n    title: 'Running backs',\n    description: '',\n  },\n  wr: {\n    title: 'Wide receivers',\n    description: '',\n  },\n  te: {\n    title: 'Tight ends',\n    description: '',\n  },\n  dst: {\n    title: 'Defenses',\n    description: '',\n  },\n};\n\nexport function PositionList({ position }) {\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const [playerList, setPlayerList] = useState([]);\n\n  // get latest week\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setErrorMessage(null);\n      const baseUrl = '/api/position/' + position;\n      try {\n        const response = await fetch(baseUrl);\n        if (response.status !== 200) throw Error(response.status);\n        const data = await response.json();\n        setPlayerList(data.playerData);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(error.toString());\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [position]);\n\n  return (\n    <div className=\"container\">\n      <div style={{ textAlign: 'center' }}>\n        <h1>{captions[position].title}</h1>\n        {loading ? <Bouncing /> : null}\n        {errorMessage ? <p>{errorMessage}</p> : null}\n      </div>\n      <div>\n        {!loading ? (\n          <React.Fragment>\n            {playerList.map((player, index) => {\n              return (\n                <div\n                  className=\"grid-3-5\"\n                  style={{ paddingBottom: '1rem' }}\n                  key={player.playerDkId}\n                >\n                  <div>\n                    <PlayerProfile\n                      avatar={player.avatar}\n                      displayName={player.firstName + ' ' + player.lastName}\n                      position={player.position}\n                      team={player.team}\n                      player={player}\n                    />\n                    <div style={{ marginBottom: '.667rem' }}></div>\n                    <ThisWeek week={player.thisWeek} />\n                  </div>\n                  <div>\n                    <LineChart\n                      salary={player.salary}\n                      projected={player.projected}\n                      projectedWin={player.projectedWin}\n                      points={slicePoints(player.points)}\n                      opponent={player.opponent}\n                      receptions={player.receptions}\n                      targets={player.targets}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n          </React.Fragment>\n        ) : null}\n      </div>\n      {MetaData({\n        caption: `${captions[position].title} | DK Charts`,\n        position: position,\n      })}\n    </div>\n  );\n}\n\nexport default PositionList;\n\nfunction slicePoints(array) {\n  if (array && array.length) {\n    return array.filter((week) => week.x !== process.env.REACT_APP_WEEK);\n  }\n\n  return [];\n}\n\nfunction MetaData({ caption, position }) {\n  const title = caption;\n  const url = 'https://dk.mattlovan.com/positon/' + position;\n  const description = caption;\n  const image = 'https://dk.mattlovan.com/logo_share.png';\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <link rel=\"canonical\" href={url} />\n      <meta name=\"description\" content={description} />\n\n      <meta property=\"og:site_name\" content={title} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:image:secure_url\" content={url} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:image:type\" content=\"png\" />\n      <meta property=\"og:image:height\" content=\"201\" />\n      <meta property=\"og:image:width\" content=\"630\" />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"Dk Charts\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n}\n","import React from 'react';\n\nimport {\n  VictoryTheme,\n  VictoryChart,\n  VictoryLine,\n  VictoryBar,\n  VictoryLabel,\n  VictoryScatter,\n  VictoryAxis,\n  VictoryLegend,\n} from 'victory';\n\nfunction LineChart({ salaryValue = [] }) {\n  // const domainArray = Array.from({ length: week + 1 }, (_, i) => i + 1);\n\n  return (\n    <VictoryChart\n      theme={VictoryTheme.material}\n      height={150}\n      domainPadding={{ x: 0, y: 10 }}\n      padding={{ top: 18, bottom: 18, left: 35, right: 35 }}\n    >\n      {/* <svg>\n        <defs>\n          <linearGradient id=\"myGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor=\"green\" />\n            <stop offset=\"100%\" stopColor=\"red\" />\n          </linearGradient>\n        </defs>\n      </svg> */}\n      {/* stroke: 'url(#myGradient)', */}\n\n      <VictoryLegend\n        orientation=\"horizontal\"\n        centerLabel\n        x={35}\n        gutter={15}\n        style={{\n          // border: { stroke: 'black' },\n          labels: { fontSize: 5, fontFamily: 'Montserrat' },\n        }}\n        data={[\n          // if (datum.position === 'QB') return 'blue';\n          // if (datum.position === 'RB') return 'red';\n          // if (datum.position === 'WR') return 'yellow';\n          // if (datum.position === 'TE') return 'gray';\n          // if (datum.position === 'DST') return 'green';\n\n          { name: 'DST', symbol: { fill: 'green' } },\n          { name: 'TE', symbol: { fill: 'purple' } },\n          { name: 'WR', symbol: { fill: 'orange' } },\n          { name: 'RB', symbol: { fill: 'red' } },\n          { name: 'QB', symbol: { fill: 'blue' } },\n        ]}\n      />\n\n      <VictoryAxis\n        domain={[0, 10000]}\n        // tickValues={domainArray}\n        // tickFormat={(tick) => {\n        //   const weekIndex = opponent.findIndex((object) => object.x === tick);\n        //   if (weekIndex > -1) {\n        //     return opponent[weekIndex].label;\n        //   }\n        //   return '';\n        // }}\n\n        style={{\n          axis: { stroke: '#aaa', strokeWidth: 1 },\n          ticks: { stroke: '#ddd', size: 3 },\n          tickLabels: {\n            fontSize: 6,\n            fontFamily: 'Montserrat',\n            fontWeight: 'bold',\n            padding: 4,\n            fill: '#888',\n          },\n        }}\n      />\n\n      <VictoryAxis\n        dependentAxis\n        // tickFormat={(x) => `${x / 1000} pts`}\n        theme={VictoryTheme.material}\n        style={{\n          axis: { stroke: '#aaa', strokeWidth: 1 },\n          tickLabels: {\n            fontSize: 6,\n            fontFamily: 'Montserrat',\n            padding: 4,\n            fill: '#888',\n          },\n        }}\n      />\n\n      {/* Points */}\n      <VictoryScatter\n        symbol=\"circle\"\n        size={2}\n        style={{\n          data: {\n            fill: ({ datum }) => {\n              if (datum.position === 'QB') return 'blue';\n              if (datum.position === 'RB') return 'red';\n              if (datum.position === 'WR') return 'orange';\n              if (datum.position === 'TE') return 'purple';\n              if (datum.position === 'DST') return 'green';\n              return 'orange';\n            },\n          },\n        }}\n        data={salaryValue}\n      />\n\n      {/* <VictoryLine\n        data={points}\n        labels={({ datum }) => datum.y / 1000}\n        style={{\n          data: {\n            stroke: '#00A7F5',\n            strokeWidth: 1,\n          },\n          labels: {\n            fontSize: 5,\n            fontFamily: 'Montserrat',\n            fill: '#007DB8',\n          },\n        }}\n      /> */}\n    </VictoryChart>\n  );\n}\n\nexport default LineChart;\n\n// function buildLineData(average, start, end) {\n//   // console.log(average, stdDev, length);\n//   // const max = average + stdDev;\n//   // const min = average - stdDev;\n\n//   const domain = [];\n//   for (let x = start; x < end; x++) {\n//     domain.push({\n//       x: x,\n//       y: average,\n//     });\n//   }\n\n//   // console.log(domain);\n//   return domain;\n// }\n\n// function buildAreaData(average, stdDev, length) {\n//   // console.log(average, stdDev, length);\n\n//   const max = average + stdDev;\n//   const min = average - stdDev;\n\n//   const data = Array.from({ length: length }, (item, index) => {\n//     return {\n//       x: index,\n//       y0: min,\n//       y: max,\n//     };\n//   });\n\n//   // console.log(data);\n//   return data;\n// }\n\n// const FPPGLine = buildLineData(FPPG, 16);\n// const FPPGLine = buildLineData(FPPG * 1000, 1, 11);\n\n// const globalLine = buildLineData(stats.global_avg, data.length);\n// const globalArea = buildAreaData(\n//   stats.global_avg,\n//   stats.global_StdDev,\n//   data.length\n// // );\n\n// const globalLine = buildLineData(1200, contentData.length);\n// const globalArea = buildAreaData(1200, 425, contentData.length);\n\n// const globalLine = buildLineData(positionAvg, 0, 18);\n// const globalArea = buildAreaData(positionAvg, positionStdDev, 18);\n\n// console.log({ globalLine, globalArea });\n","import React, { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\n\nimport ScatterChart from 'components/scatterChart';\nimport { Bouncing } from 'components/random';\n\nexport function PositonScatter({ week }) {\n  // const { callApi, user, updateUser } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  // const [successMessage, setSuccessMessage] = useState(null);\n\n  const [array, setArray] = useState([]);\n\n  // get latest week\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      const baseUrl = '/api/week/' + week;\n      try {\n        const response = await fetch(baseUrl);\n        const data = await response.json();\n\n        const salaryValue = data.map((player) => {\n          return {\n            x: player.salary,\n            y: player.salaryMultiple,\n            position: player.position,\n          };\n        });\n\n        // console.log(salaryValue);\n        setArray(salaryValue);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(error.toString());\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [week]);\n\n  return (\n    <div className=\"container\">\n      <div style={{ textAlign: 'center' }}>\n        <h1>Week {week}</h1>\n        {/* {MetaData(player)} */}\n        {loading ? <Bouncing /> : null}\n        {errorMessage ? <p>{errorMessage}</p> : null}\n      </div>\n      {!loading ? (\n        <div>\n          <div style={{ marginBottom: '1rem' }}></div>\n\n          <ScatterChart salaryValue={array} />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default PositonScatter;\n\n// function MetaData(player) {\n//   const title = player.firstName + ' ' + player.lastName;\n//   const url = 'https://dk.mattlovan.com/player/' + player.playerdkId;\n//   const description =\n//     player.firstName + ' ' + player.lastName + ' on DK Charts';\n//   const image = 'https://dk.mattlovan.com/logo_share.png';\n\n//   return (\n//     <Helmet>\n//       <title>{title}</title>\n//       <link rel=\"canonical\" href={url} />\n//       <meta name=\"description\" content={description} />\n\n//       <meta property=\"og:site_name\" content={title} />\n//       <meta property=\"og:type\" content=\"website\" />\n//       <meta property=\"og:url\" content={url} />\n//       <meta property=\"og:image:secure_url\" content={url} />\n//       <meta property=\"og:image\" content={image} />\n//       <meta property=\"og:image:type\" content=\"png\" />\n//       <meta property=\"og:image:height\" content=\"201\" />\n//       <meta property=\"og:image:width\" content=\"630\" />\n\n//       <meta name=\"twitter:card\" content=\"summary_large_image\" />\n//       <meta name=\"twitter:site\" content=\"Dk Charts\" />\n//       <meta name=\"twitter:title\" content={title} />\n//       <meta name=\"twitter:description\" content={description} />\n//       <meta name=\"twitter:image\" content={image} />\n//     </Helmet>\n//   );\n// }\n","import React, { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\n\nimport LineChart from 'components/lineChart';\nimport { PlayerProfile } from 'components/random';\n\nexport function WeekForm({ playerDkId }) {\n  // const { callApi, user, updateUser } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  // const [successMessage, setSuccessMessage] = useState(null);\n\n  const [player, setPlayer] = useState({});\n\n  // get latest week\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      const baseUrl = '/api/player/' + playerDkId;\n      try {\n        const response = await fetch(baseUrl);\n        const data = await response.json();\n        setPlayer(data);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(error.toString());\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [playerDkId]);\n\n  return (\n    <div className=\"container\">\n      <div style={{ textAlign: 'center' }}>\n        {MetaData(player)}\n        {loading ? <Bouncing /> : null}\n        {errorMessage ? <p>{errorMessage}</p> : null}\n      </div>\n      {!loading ? (\n        <div>\n          <div style={{ marginBottom: '1rem' }}></div>\n          <PlayerProfile avatar={player.avatar} player={player} />\n\n          <LineChart\n            salary={player.salary}\n            projected={player.projected}\n            projectedWin={player.projectedWin}\n            points={slicePoints(player.points)}\n            opponent={player.opponent}\n            receptions={player.receptions}\n            targets={player.targets}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default WeekForm;\n\nfunction slicePoints(array) {\n  if (array && array.length) {\n    return array.filter((week) => week.x !== process.env.REACT_APP_WEEK);\n  }\n\n  return [];\n}\n\nexport function Bouncing() {\n  return (\n    <div style={{ textAlign: 'center', display: 'inline-block' }}>\n      <div className=\"spinner\">\n        <div className=\"bounce1\"></div>\n        <div className=\"bounce2\"></div>\n        <div className=\"bounce3\"></div>\n      </div>\n    </div>\n  );\n}\n\nfunction MetaData(player) {\n  const title = player.firstName + ' ' + player.lastName;\n  const url = 'https://dk.mattlovan.com/player/' + player.playerdkId;\n  const description =\n    player.firstName + ' ' + player.lastName + ' on DK Charts';\n  const image = 'https://dk.mattlovan.com/logo_share.png';\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <link rel=\"canonical\" href={url} />\n      <meta name=\"description\" content={description} />\n\n      <meta property=\"og:site_name\" content={title} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:image:secure_url\" content={url} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:image:type\" content=\"png\" />\n      <meta property=\"og:image:height\" content=\"201\" />\n      <meta property=\"og:image:width\" content=\"630\" />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"Dk Charts\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n}\n","import React, { useContext } from 'react';\nimport Helmet from 'react-helmet';\n\nimport { CustomListContext } from 'App';\n\nimport LineChart from 'components/lineChart';\nimport { PlayerProfile, ThisWeek } from 'components/random';\n\nexport function CustomList({ position }) {\n  const { customList } = useContext(CustomListContext);\n\n  return (\n    <div className=\"container\">\n      <div style={{ textAlign: 'center' }}>\n        <h1>Custom List</h1>\n        {MetaData({\n          caption: 'DK Charts',\n          position: position,\n        })}\n      </div>\n      <div>\n        {customList.map((item, index) => {\n          return (\n            <div className=\"grid-3-5\" key={item.playerDkId}>\n              <div>\n                <PlayerProfile\n                  avatar={item.avatar}\n                  displayName={item.firstName + ' ' + item.lastName}\n                  position={item.position}\n                  team={item.team}\n                  player={item}\n                />\n                <div style={{ marginBottom: '.667rem' }}></div>\n                <ThisWeek week={item.thisWeek} />\n              </div>\n\n              <div>\n                <LineChart\n                  salary={item.salary}\n                  projected={item.projected}\n                  projectedWin={item.projectedWin}\n                  points={slicePoints(item.points)}\n                  opponent={item.opponent}\n                  receptions={item.receptions}\n                  targets={item.targets}\n                />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default CustomList;\n\nfunction slicePoints(array) {\n  if (array && array.length) {\n    return array.filter((week) => week.x !== process.env.REACT_APP_WEEK);\n  }\n\n  return [];\n}\n\nfunction MetaData({ caption, position }) {\n  const title = caption;\n  const url = 'https://dk.mattlovan.com/positon/' + position;\n  const description = caption;\n  const image = 'https://dk.mattlovan.com/logo_share.png';\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <link rel=\"canonical\" href={url} />\n      <meta name=\"description\" content={description} />\n\n      <meta property=\"og:site_name\" content={title} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:image:secure_url\" content={url} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:image:type\" content=\"png\" />\n      <meta property=\"og:image:height\" content=\"201\" />\n      <meta property=\"og:image:width\" content=\"630\" />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"Dk Charts\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n}\n","import React from 'react';\nimport { Link } from '@reach/router';\n\nfunction AboutPage(props) {\n  return (\n    <div>\n      <div className=\"container\" style={{ textAlign: 'center' }}>\n        <h1>Page Not Found</h1>\n        <p>We're sorry – the page you're looking for was not found.</p>\n        <p>Suggested Pages:</p>\n\n        <p>\n          <Link to=\"/\">Home Page</Link>\n        </p>\n        <p>\n          <Link to=\"/login\">Sign In</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutPage;\n","import React from 'react';\n\nimport { Router, Link } from '@reach/router';\nimport { OnRouteChange } from 'routingHack.js';\nimport { buildTime } from 'components/random';\n\n// routes\nimport Header from './components/header';\n\nimport LandingPage from './components/LandingPage';\nimport Analysis from './components/Analysis';\nimport { WeekForm as Charts } from './components/WeeklyChart';\nimport PositionList from './components/PositionList';\nimport PositionScatter from './components/positionScatter';\nimport Player from './components/Player';\nimport CustomList from './components/CustomList';\nimport NotFound from './components/404';\n\n// Custom List\nexport const CustomListContext = React.createContext({});\nconst customList = [];\nfunction addToList(player) {\n  customList.push(player);\n}\nfunction removeFromList(index) {\n  customList.splice(index, 1);\n}\nfunction toggleSelected(player) {\n  const index = customList.findIndex((x) => x.playerDkId === player.playerDkId);\n\n  if (index >= 0) {\n    // console.log('remove');\n    removeFromList(index);\n  } else {\n    // console.log('add');\n    addToList(player);\n  }\n  // console.log('toggle', index, customList);\n}\nfunction onList(player) {\n  return customList.findIndex((x) => x.playerDkId === player.playerDkId) >= 0;\n}\n\nconst version = process.env.REACT_APP_VERSION;\nfunction App() {\n  return (\n    <CustomListContext.Provider value={{ customList, onList, toggleSelected }}>\n      <div className=\"App\">\n        <Header />\n        <div className=\"page-container\">\n          <Router>\n            <LandingPage path=\"/\" />\n            <Charts path=\"/charts\" />\n            <Player path=\"/player/:playerDkId\" />\n            <PositionList path=\"/position/:position\" />\n            <PositionScatter path=\"/scatter/:week\" />\n            <CustomList path=\"/custom\" />\n\n            <NotFound default />\n          </Router>\n          <OnRouteChange\n            action={() => {\n              window.scrollTo(0, 0);\n            }}\n          ></OnRouteChange>\n        </div>\n\n        <footer>\n          <p>\n            v{version} ({buildTime()})\n          </p>\n        </footer>\n      </div>\n    </CustomListContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import './css/bootstrap.min.css';\nimport './css/index.scss';\nimport './css/App.scss';\nimport './css/buttons_forms.scss';\nimport './css/loaders.scss';\nimport './css/header.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}